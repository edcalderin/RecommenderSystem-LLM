name: Recommender CI/CD Pipeline

on:
  push:
    branches:
    - master

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Python Virtual ENV
      run: pip3 install virtualenv

    - name: Setup Virtual env
      uses: actions/cache@v2
      id: cache-venv
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Activate and Install Depencies into Virtual env
      run: |
        python -m venv venv
        source venv/bin/activate
      if: steps.cache-venv.outputs.cache-hit != 'true'

    - name: Install tox
      run: |
        pip install --upgrade pip
        pip install --user tox

    - name: Run tests and lint
      run: tox

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1

    - name: Creating Docker Image
      run: docker build -t ${{vars.DOCKER_IMAGE}} .

    - name: Tagging Image
      run: docker tag ${{vars.DOCKER_IMAGE}}:latest ${{vars.DOCKER_REPOSITORY}}:latest

    - name: Pushing image
      run: docker push ${vars.DOCKER_REPOSITORY}:latest
